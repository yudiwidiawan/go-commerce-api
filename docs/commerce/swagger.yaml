definitions:
  CreateUserInput:
    properties:
      email:
        example: johnasep@mail.com
        type: string
      first_name:
        example: John
        type: string
      gender:
        example: L
        type: string
      last_name:
        example: Asep
        type: string
      password:
        example: password123!
        type: string
      phone_number:
        example: "08812314555"
        type: string
      profile_pic:
        example: https://usr.co.id/img.jpg
        type: string
      username:
        example: username123
        type: string
    required:
    - first_name
    - last_name
    - password
    - username
    type: object
  LoginUserInput:
    properties:
      password:
        example: password123!
        type: string
      username:
        example: username123
        type: string
    required:
    - password
    - username
    type: object
  ReturnSimpleUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
  UpdateUserInput:
    properties:
      email:
        example: johnasep@mail.com
        type: string
      first_name:
        example: John
        type: string
      gender:
        example: L
        type: string
      last_name:
        example: Asep
        type: string
      password:
        example: password123!
        type: string
      phone_number:
        example: "08812314555"
        type: string
      profile_pic:
        example: https://usr.co.id/img.jpg
        type: string
      username:
        example: username123
        type: string
    required:
    - first_name
    - last_name
    - password
    - username
    type: object
  controllers.Commerce_Cart_Product:
    properties:
      cart_id:
        type: integer
      cart_product_id:
        type: integer
      product_count:
        type: integer
      product_id:
        type: integer
    type: object
  controllers.Commerce_Product_Categories:
    properties:
      category_id:
        type: integer
      product_category_id:
        type: integer
      product_id:
        type: integer
    type: object
  controllers.CreateAddressInput:
    properties:
      address_city:
        type: string
      address_country:
        type: string
      address_latitude:
        type: string
      address_longitude:
        type: string
      address_postcode:
        type: integer
      address_province:
        type: string
      address_street:
        type: string
    type: object
  controllers.CreateCartInput:
    properties:
      status:
        type: string
      user_id:
        type: integer
    type: object
  controllers.CreateCategoryInput:
    properties:
      category_child_id:
        type: integer
      category_name:
        type: string
      category_parent_id:
        type: integer
    type: object
  controllers.CreateEtalaseInput:
    properties:
      etalase_name:
        type: string
      shop_id:
        type: integer
    type: object
  controllers.CreateProductInput:
    properties:
      etalase_id:
        type: integer
      product_condition:
        type: string
      product_desc:
        type: string
      product_dimension:
        type: string
      product_name:
        type: string
      product_pict:
        type: string
      product_price:
        type: integer
      product_weight:
        type: integer
    type: object
  controllers.CreateShopInput:
    properties:
      shop_desc:
        type: string
      shop_email:
        type: string
      shop_name:
        type: string
      shop_phone_number:
        type: string
      user_id:
        type: integer
    type: object
  controllers.UpdateAddressInput:
    properties:
      address_city:
        type: string
      address_country:
        type: string
      address_latitude:
        type: string
      address_longitude:
        type: string
      address_postcode:
        type: integer
      address_province:
        type: string
      address_street:
        type: string
    type: object
  controllers.UpdateCartInput:
    properties:
      status:
        type: string
      user_id:
        type: integer
    type: object
  controllers.UpdateCategoryInput:
    properties:
      category_child_id:
        type: integer
      category_name:
        type: string
      category_parent_id:
        type: integer
    type: object
  controllers.UpdateEtalaseInput:
    properties:
      etalase_name:
        type: string
      shop_id:
        type: integer
    type: object
  controllers.UpdateProductCategories:
    properties:
      category_id:
        type: integer
      product_category_id:
        type: integer
      product_id:
        type: integer
    type: object
  controllers.UpdateProductInput:
    properties:
      product_condition:
        type: string
      product_desc:
        type: string
      product_dimension:
        type: string
      product_name:
        type: string
      product_pict:
        type: string
      product_price:
        type: integer
      product_weight:
        type: integer
    type: object
  controllers.UpdateShopInput:
    properties:
      shop_desc:
        type: string
      shop_email:
        type: string
      shop_name:
        type: string
      shop_phone_number:
        type: string
      user_id:
        type: integer
    type: object
  models.Commerce_Address:
    properties:
      address_city:
        type: string
      address_country:
        type: string
      address_id:
        type: integer
      address_latitude:
        type: string
      address_longitude:
        type: string
      address_postcode:
        type: integer
      address_province:
        type: string
      address_street:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Commerce_Cart_User:
    properties:
      cart_id:
        type: integer
      created_at:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Commerce_Categories:
    properties:
      category_child_id:
        type: integer
      category_id:
        type: integer
      category_name:
        type: string
      category_parent_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Commerce_Etalase:
    properties:
      created_at:
        type: string
      etalase_id:
        type: integer
      etalase_name:
        type: string
      shop_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Commerce_Product:
    properties:
      created_at:
        type: string
      etalase_id:
        type: integer
      product_condition:
        type: string
      product_desc:
        type: string
      product_dimension:
        type: string
      product_id:
        type: integer
      product_name:
        type: string
      product_pict:
        type: string
      product_price:
        type: integer
      product_weight:
        type: integer
      updated_at:
        type: string
    type: object
  models.Commerce_Shop:
    properties:
      created_at:
        type: string
      shop_desc:
        type: string
      shop_email:
        type: string
      shop_id:
        type: integer
      shop_name:
        type: string
      shop_phone_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Commerce_User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_pic:
        type: string
      role_ID:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/admin/category/:category_id:
    delete:
      description: Delete a category by its id.
      parameters:
      - description: The category id
        in: path
        name: category_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one category.
      tags:
      - admin
    get:
      description: Get a category by its id.
      parameters:
      - description: The category id
        in: path
        name: category_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Categories'
      security:
      - BearerToken: []
      summary: Get one category.
      tags:
      - admin
    patch:
      description: Update a category by its id.
      parameters:
      - description: The category id
        in: path
        name: category_id
        required: true
        type: string
      - description: the body to update a category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateCategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Categories'
      security:
      - BearerToken: []
      summary: Update one category.
      tags:
      - admin
  /api/admin/category/create:
    post:
      description: Creating a new category from admin access.
      parameters:
      - description: the body to create a new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Categories'
      security:
      - BearerToken: []
      summary: Create a category.
      tags:
      - admin
  /api/admin/shops:
    get:
      description: Get a list of shops registered in the system.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Shop'
            type: array
      security:
      - BearerToken: []
      summary: Get all shops.
      tags:
      - admin
  /api/admin/shops/:shop_id:
    delete:
      description: Delete a shop by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one shop.
      tags:
      - admin
    get:
      description: Get a shop by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Get one shop.
      tags:
      - admin
    patch:
      description: Update a shop by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: the body to update a shop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateShopInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Update one shop.
      tags:
      - admin
  /api/admin/shops/create:
    post:
      description: Creating a shop from admin access.
      parameters:
      - description: the body to create a shop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateShopInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Create a shop.
      tags:
      - admin
  /api/admin/users:
    get:
      description: Get a list of user registered in the system.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_User'
            type: array
      security:
      - BearerToken: []
      summary: Get all user.
      tags:
      - admin
  /api/admin/users/:user_id:
    delete:
      description: Delete a user by its id.
      parameters:
      - description: The user id
        in: path
        name: user_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one user.
      tags:
      - admin
    get:
      description: Get a user by its id.
      parameters:
      - description: The user id
        in: path
        name: user_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_User'
      security:
      - BearerToken: []
      summary: Get one user.
      tags:
      - admin
    patch:
      description: Update a user by its id.
      parameters:
      - description: The user id
        in: path
        name: user_id
        required: true
        type: string
      - description: the body to update a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UpdateUserInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_User'
      security:
      - BearerToken: []
      summary: Update one user.
      tags:
      - admin
  /api/categories:
    get:
      description: Get a list of available categories registered in the system by
        keyword.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Categories'
            type: array
      summary: Get all categories.
      tags:
      - public
  /api/login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/LoginUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - user
      - public
      - admin
  /api/products/search:
    get:
      description: Get a list of products registered in the system by keyword.
      parameters:
      - description: The keyword for products.
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Product'
            type: array
      summary: Search products by keyword.
      tags:
      - public
  /api/register:
    post:
      description: Creating/registering a user from public access.
      parameters:
      - description: the body to create a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ReturnSimpleUser'
      summary: Create/Register a user.
      tags:
      - user
      - public
      - admin
  /api/shops/search:
    get:
      description: Get a list of shops registered in the system by keyword.
      parameters:
      - description: The keyword for shop.
        in: query
        name: keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Shop'
            type: array
      summary: Search shop by keyword.
      tags:
      - public
  /api/user/address/:address_id:
    delete:
      description: Delete an address by its id.
      parameters:
      - description: The address id
        in: path
        name: address_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one address.
      tags:
      - user
    patch:
      description: Update an address by its id.
      parameters:
      - description: The address id
        in: path
        name: address_id
        required: true
        type: string
      - description: the body to update an address
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateAddressInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Address'
      security:
      - BearerToken: []
      summary: Update an address.
      tags:
      - user
  /api/user/address/create:
    post:
      description: Creating a new address user.
      parameters:
      - description: the body to create a new address
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAddressInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Address'
      security:
      - BearerToken: []
      summary: Create an address.
      tags:
      - user
  /api/user/addresses:
    get:
      description: Get a list of available address user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Address'
            type: array
      summary: Get all address from user.
      tags:
      - user
  /api/user/cart/:cart_id:
    delete:
      description: Delete a cart by its id.
      parameters:
      - description: The cart id
        in: path
        name: cart_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one cart.
      tags:
      - user
    patch:
      description: Update a cart by its id.
      parameters:
      - description: The cart id
        in: path
        name: cart_id
        required: true
        type: string
      - description: the body to update a cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateCartInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Cart_User'
      security:
      - BearerToken: []
      summary: Update a cart.
      tags:
      - user
  /api/user/cart/add:
    post:
      description: Adding a new product to an existing cart for user.
      parameters:
      - description: the body to add a product to cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.Commerce_Cart_Product'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Commerce_Cart_Product'
      security:
      - BearerToken: []
      summary: Add a product to a cart.
      tags:
      - user
  /api/user/cart/create:
    post:
      description: Creating a new cart for user.
      parameters:
      - description: the body to create a new cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCartInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Cart_User'
      security:
      - BearerToken: []
      summary: Create a cart.
      tags:
      - user
  /api/user/cart/product/:cart_product_id:
    delete:
      description: Delete a product cart by cart product id.
      parameters:
      - description: The cart product id
        in: path
        name: cart_product_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete a product cart.
      tags:
      - user
    patch:
      description: Updating a product in a cart by cart product id.
      parameters:
      - description: The cart product id
        in: path
        name: cart_product_id
        required: true
        type: string
      - description: the body to update a product cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.Commerce_Cart_Product'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Commerce_Cart_Product'
      security:
      - BearerToken: []
      summary: Update product in a cart.
      tags:
      - user
  /api/user/details:
    get:
      description: Get a user its own detail.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_User'
      security:
      - BearerToken: []
      summary: Get detail user.
      tags:
      - user
  /api/user/etalase/:etalase_id/product/create:
    post:
      description: Creating a product from user access.
      parameters:
      - description: The etalase id
        in: path
        name: etalase_id
        required: true
        type: string
      - description: the body to create a shop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateProductInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Product'
      security:
      - BearerToken: []
      summary: Create a product by user.
      tags:
      - user
  /api/user/etalase/:etalase_id/products:
    get:
      description: Get a list of products in etalase.
      parameters:
      - description: The etalase id
        in: path
        name: etalase_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Product'
            type: array
      summary: Get products by etalase id.
      tags:
      - user
  /api/user/product/:product_id:
    delete:
      description: Delete a user product by product id.
      parameters:
      - description: The product id
        in: path
        name: product_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete a product.
      tags:
      - user
    patch:
      description: Update a product by its id.
      parameters:
      - description: The product id
        in: path
        name: product_id
        required: true
        type: string
      - description: the body to update a product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateProductInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Product'
      security:
      - BearerToken: []
      summary: Update one product.
      tags:
      - user
  /api/user/product/category/:product_category_id:
    delete:
      description: Delete a user product category by product category id.
      parameters:
      - description: The product category id
        in: path
        name: product_category_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete a product category.
      tags:
      - user
    patch:
      description: Update a product category by product category id.
      parameters:
      - description: The product category id
        in: path
        name: product_category_id
        required: true
        type: string
      - description: the body to update a product category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateProductCategories'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UpdateProductCategories'
      security:
      - BearerToken: []
      summary: Update one product category id.
      tags:
      - user
  /api/user/product/category/create:
    post:
      description: Creating a product category from user access.
      parameters:
      - description: the body to create a product category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.Commerce_Product_Categories'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Commerce_Product_Categories'
      security:
      - BearerToken: []
      summary: Create a product category by user.
      tags:
      - user
  /api/user/products/:product_id/categories:
    get:
      description: Get a list of product categories by product id.
      parameters:
      - description: The product id.
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Commerce_Product_Categories'
            type: array
      summary: Get product categories..
      tags:
      - user
  /api/user/shop/:shop_id:
    delete:
      description: Delete a shop user by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one user shop.
      tags:
      - user
    get:
      description: Get a user shop detail.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Get detail user shop.
      tags:
      - user
    patch:
      description: Update a user shop by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: the body to update a shop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateShopInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Update one user shop.
      tags:
      - user
  /api/user/shop/:shop_id/etalase:
    get:
      description: Get etalase shop user by its id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Etalase'
            type: array
      security:
      - BearerToken: []
      summary: Get etalase of a shop user.
      tags:
      - user
  /api/user/shop/:shop_id/etalase/:etalase_id:
    delete:
      description: Delete a shop user etalase by its id.
      parameters:
      - description: The etalase id
        in: path
        name: etalase_id
        required: true
        type: string
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one user etalase.
      tags:
      - user
    get:
      description: Get a etalase shop by shop id and etalase id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: The etalase id
        in: path
        name: etalase_id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Etalase'
      security:
      - BearerToken: []
      summary: Get one etalase from one shop.
      tags:
      - user
    patch:
      description: Update a user shop etalase by shop id and etalase id.
      parameters:
      - description: The etalase id
        in: path
        name: etalase_id
        required: true
        type: string
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      - description: the body to update an etalase
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateEtalaseInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Etalase'
      security:
      - BearerToken: []
      summary: Update an user shop etalase.
      tags:
      - user
  /api/user/shop/:shop_id/etalase/create:
    post:
      description: Creating an etalase shop user.
      parameters:
      - description: the body to create an etalase
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateEtalaseInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Etalase'
      security:
      - BearerToken: []
      summary: Create an etalase shop user.
      tags:
      - user
  /api/user/shop/:shop_id/products:
    get:
      description: Get a list of products in shop by shop id.
      parameters:
      - description: The shop id
        in: path
        name: shop_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Product'
            type: array
      summary: Get products by shop.
      tags:
      - user
  /api/user/shops:
    get:
      description: Get a list user shops in the system.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commerce_Shop'
            type: array
      summary: Get user shop.
      tags:
      - user
  /api/user/shops/create:
    post:
      description: Creating a shop from user access.
      parameters:
      - description: the body to create a shop
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateShopInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_Shop'
      security:
      - BearerToken: []
      summary: Create a shop by user.
      tags:
      - user
  /api/user/update:
    get:
      description: Update user its own data.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Commerce_User'
      security:
      - BearerToken: []
      summary: Update user data.
      tags:
      - user
swagger: "2.0"
