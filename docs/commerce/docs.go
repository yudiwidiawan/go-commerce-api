// Package commerce GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package commerce

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/category/:category_id": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a category by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get one category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Categories"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a category by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete one category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a category by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update one category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The category id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateCategoryInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Categories"
                        }
                    }
                }
            }
        },
        "/api/admin/category/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new category from admin access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a category.",
                "parameters": [
                    {
                        "description": "the body to create a new category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateCategoryInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Categories"
                        }
                    }
                }
            }
        },
        "/api/admin/shops": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a list of shops registered in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all shops.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Shop"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/shops/:shop_id": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a shop by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get one shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a shop by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete one shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a shop by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update one shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a shop",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateShopInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            }
        },
        "/api/admin/shops/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a shop from admin access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a shop.",
                "parameters": [
                    {
                        "description": "the body to create a shop",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateShopInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a list of user registered in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_User"
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/:user_id": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a user by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get one user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_User"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a user by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete one user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a user by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update one user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_User"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "description": "Get a list of available categories registered in the system by keyword.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get all categories.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Categories"
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Logging in to get jwt token to access admin or user api by roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "public",
                    "admin"
                ],
                "summary": "Login as as user.",
                "parameters": [
                    {
                        "description": "the body to login a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/products/search": {
            "get": {
                "description": "Get a list of products registered in the system by keyword.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Search products by keyword.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The keyword for products.",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Product"
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Creating/registering a user from public access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "public",
                    "admin"
                ],
                "summary": "Create/Register a user.",
                "parameters": [
                    {
                        "description": "the body to create a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReturnSimpleUser"
                        }
                    }
                }
            }
        },
        "/api/shops/search": {
            "get": {
                "description": "Get a list of shops registered in the system by keyword.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Search shop by keyword.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The keyword for shop.",
                        "name": "keyword",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Shop"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/address/:address_id": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete an address by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete one address.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address id",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update an address by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update an address.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The address id",
                        "name": "address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update an address",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateAddressInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Address"
                        }
                    }
                }
            }
        },
        "/api/user/address/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new address user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create an address.",
                "parameters": [
                    {
                        "description": "the body to create a new address",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateAddressInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Address"
                        }
                    }
                }
            }
        },
        "/api/user/addresses": {
            "get": {
                "description": "Get a list of available address user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get all address from user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Address"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/cart/:cart_id": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a cart by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete one cart.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The cart id",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a cart by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a cart.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The cart id",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a cart",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateCartInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Cart_User"
                        }
                    }
                }
            }
        },
        "/api/user/cart/add": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Adding a new product to an existing cart for user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a product to a cart.",
                "parameters": [
                    {
                        "description": "the body to add a product to cart",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Cart_Product"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Cart_Product"
                        }
                    }
                }
            }
        },
        "/api/user/cart/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new cart for user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a cart.",
                "parameters": [
                    {
                        "description": "the body to create a new cart",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateCartInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Cart_User"
                        }
                    }
                }
            }
        },
        "/api/user/cart/product/:cart_product_id": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a product cart by cart product id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a product cart.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The cart product id",
                        "name": "cart_product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Updating a product in a cart by cart product id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update product in a cart.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The cart product id",
                        "name": "cart_product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a product cart",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Cart_Product"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Cart_Product"
                        }
                    }
                }
            }
        },
        "/api/user/details": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a user its own detail.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get detail user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_User"
                        }
                    }
                }
            }
        },
        "/api/user/etalase/:etalase_id/product/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a product from user access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a product by user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The etalase id",
                        "name": "etalase_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to create a shop",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateProductInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Product"
                        }
                    }
                }
            }
        },
        "/api/user/etalase/:etalase_id/products": {
            "get": {
                "description": "Get a list of products in etalase.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get products by etalase id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The etalase id",
                        "name": "etalase_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Product"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/product/:product_id": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a user product by product id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a product.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The product id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a product by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update one product.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The product id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a product",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateProductInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Product"
                        }
                    }
                }
            }
        },
        "/api/user/product/category/:product_category_id": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a user product category by product category id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete a product category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The product category id",
                        "name": "product_category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a product category by product category id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update one product category id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The product category id",
                        "name": "product_category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a product category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateProductCategories"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateProductCategories"
                        }
                    }
                }
            }
        },
        "/api/user/product/category/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a product category from user access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a product category by user.",
                "parameters": [
                    {
                        "description": "the body to create a product category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Product_Categories"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Commerce_Product_Categories"
                        }
                    }
                }
            }
        },
        "/api/user/products/:product_id/categories": {
            "get": {
                "description": "Get a list of product categories by product id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get product categories..",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The product id.",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.Commerce_Product_Categories"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/shop/:shop_id": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a user shop detail.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get detail user shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a shop user by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete one user shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a user shop by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update one user shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a shop",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateShopInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            }
        },
        "/api/user/shop/:shop_id/etalase": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get etalase shop user by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get etalase of a shop user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Etalase"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/shop/:shop_id/etalase/:etalase_id": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a etalase shop by shop id and etalase id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get one etalase from one shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The etalase id",
                        "name": "etalase_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Etalase"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a shop user etalase by its id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete one user etalase.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The etalase id",
                        "name": "etalase_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a user shop etalase by shop id and etalase id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update an user shop etalase.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The etalase id",
                        "name": "etalase_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update an etalase",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateEtalaseInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Etalase"
                        }
                    }
                }
            }
        },
        "/api/user/shop/:shop_id/etalase/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating an etalase shop user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create an etalase shop user.",
                "parameters": [
                    {
                        "description": "the body to create an etalase",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateEtalaseInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Etalase"
                        }
                    }
                }
            }
        },
        "/api/user/shop/:shop_id/products": {
            "get": {
                "description": "Get a list of products in shop by shop id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get products by shop.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The shop id",
                        "name": "shop_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Product"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/shops": {
            "get": {
                "description": "Get a list user shops in the system.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user shop.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Commerce_Shop"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/shops/create": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a shop from user access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a shop by user.",
                "parameters": [
                    {
                        "description": "the body to create a shop",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateShopInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_Shop"
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update user its own data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user data.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commerce_User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateUserInput": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johnasep@mail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "type": "string",
                    "example": "L"
                },
                "last_name": {
                    "type": "string",
                    "example": "Asep"
                },
                "password": {
                    "type": "string",
                    "example": "password123!"
                },
                "phone_number": {
                    "type": "string",
                    "example": "08812314555"
                },
                "profile_pic": {
                    "type": "string",
                    "example": "https://usr.co.id/img.jpg"
                },
                "username": {
                    "type": "string",
                    "example": "username123"
                }
            }
        },
        "LoginUserInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password123!"
                },
                "username": {
                    "type": "string",
                    "example": "username123"
                }
            }
        },
        "ReturnSimpleUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UpdateUserInput": {
            "type": "object",
            "required": [
                "first_name",
                "last_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johnasep@mail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "gender": {
                    "type": "string",
                    "example": "L"
                },
                "last_name": {
                    "type": "string",
                    "example": "Asep"
                },
                "password": {
                    "type": "string",
                    "example": "password123!"
                },
                "phone_number": {
                    "type": "string",
                    "example": "08812314555"
                },
                "profile_pic": {
                    "type": "string",
                    "example": "https://usr.co.id/img.jpg"
                },
                "username": {
                    "type": "string",
                    "example": "username123"
                }
            }
        },
        "controllers.Commerce_Cart_Product": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "type": "integer"
                },
                "cart_product_id": {
                    "type": "integer"
                },
                "product_count": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.Commerce_Product_Categories": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "product_category_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.CreateAddressInput": {
            "type": "object",
            "properties": {
                "address_city": {
                    "type": "string"
                },
                "address_country": {
                    "type": "string"
                },
                "address_latitude": {
                    "type": "string"
                },
                "address_longitude": {
                    "type": "string"
                },
                "address_postcode": {
                    "type": "integer"
                },
                "address_province": {
                    "type": "string"
                },
                "address_street": {
                    "type": "string"
                }
            }
        },
        "controllers.CreateCartInput": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.CreateCategoryInput": {
            "type": "object",
            "properties": {
                "category_child_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_parent_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.CreateEtalaseInput": {
            "type": "object",
            "properties": {
                "etalase_name": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.CreateProductInput": {
            "type": "object",
            "properties": {
                "etalase_id": {
                    "type": "integer"
                },
                "product_condition": {
                    "type": "string"
                },
                "product_desc": {
                    "type": "string"
                },
                "product_dimension": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_pict": {
                    "type": "string"
                },
                "product_price": {
                    "type": "integer"
                },
                "product_weight": {
                    "type": "integer"
                }
            }
        },
        "controllers.CreateShopInput": {
            "type": "object",
            "properties": {
                "shop_desc": {
                    "type": "string"
                },
                "shop_email": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "shop_phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateAddressInput": {
            "type": "object",
            "properties": {
                "address_city": {
                    "type": "string"
                },
                "address_country": {
                    "type": "string"
                },
                "address_latitude": {
                    "type": "string"
                },
                "address_longitude": {
                    "type": "string"
                },
                "address_postcode": {
                    "type": "integer"
                },
                "address_province": {
                    "type": "string"
                },
                "address_street": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdateCartInput": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateCategoryInput": {
            "type": "object",
            "properties": {
                "category_child_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_parent_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateEtalaseInput": {
            "type": "object",
            "properties": {
                "etalase_name": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateProductCategories": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "product_category_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateProductInput": {
            "type": "object",
            "properties": {
                "product_condition": {
                    "type": "string"
                },
                "product_desc": {
                    "type": "string"
                },
                "product_dimension": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_pict": {
                    "type": "string"
                },
                "product_price": {
                    "type": "integer"
                },
                "product_weight": {
                    "type": "integer"
                }
            }
        },
        "controllers.UpdateShopInput": {
            "type": "object",
            "properties": {
                "shop_desc": {
                    "type": "string"
                },
                "shop_email": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "shop_phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Commerce_Address": {
            "type": "object",
            "properties": {
                "address_city": {
                    "type": "string"
                },
                "address_country": {
                    "type": "string"
                },
                "address_id": {
                    "type": "integer"
                },
                "address_latitude": {
                    "type": "string"
                },
                "address_longitude": {
                    "type": "string"
                },
                "address_postcode": {
                    "type": "integer"
                },
                "address_province": {
                    "type": "string"
                },
                "address_street": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Commerce_Cart_User": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Commerce_Categories": {
            "type": "object",
            "properties": {
                "category_child_id": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "category_name": {
                    "type": "string"
                },
                "category_parent_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Commerce_Etalase": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "etalase_id": {
                    "type": "integer"
                },
                "etalase_name": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Commerce_Product": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "etalase_id": {
                    "type": "integer"
                },
                "product_condition": {
                    "type": "string"
                },
                "product_desc": {
                    "type": "string"
                },
                "product_dimension": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "product_pict": {
                    "type": "string"
                },
                "product_price": {
                    "type": "integer"
                },
                "product_weight": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Commerce_Shop": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "shop_desc": {
                    "type": "string"
                },
                "shop_email": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "integer"
                },
                "shop_name": {
                    "type": "string"
                },
                "shop_phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Commerce_User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profile_pic": {
                    "type": "string"
                },
                "role_ID": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
